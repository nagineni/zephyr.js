# Copyright (c) 2016-2017, Intel Corporation.

ifndef ZJS_BASE
$(error ZJS_BASE not defined)
endif

JERRY_BASE ?= $(ZJS_BASE)/deps/jerryscript
OCF_ROOT ?= deps/iotivity-constrained

BUILD_DIR = $(ZJS_BASE)/outdir/linux/$(VARIANT)

UNAME := $(shell uname)

CORE_SRC +=	src/zjs_a101_pins.c \
		src/zjs_board.c \
		src/zjs_buffer.c \
		src/zjs_callbacks.c \
		src/zjs_common.c \
		src/zjs_console.c \
		src/zjs_error.c \
		src/zjs_event.c \
		src/zjs_gpio.c \
		src/zjs_gpio_mock.c \
		src/zjs_linux_ring_buffer.c \
		src/zjs_linux_time.c \
		src/main.c \
		src/zjs_modules.c \
		src/zjs_performance.c \
		src/zjs_script.c \
		src/zjs_timers.c \
		src/zjs_test_promise.c \
		src/zjs_test_callbacks.c \
		src/zjs_unit_tests.c \
		src/zjs_util.c \
		src/jerry-port/zjs_jerry_port.c

CORE_OBJ =	$(CORE_SRC:%.c=%.o)

LINUX_INCLUDES += 	-Isrc/ \
			-I$(ZJS_BASE)/outdir/include \
			-I$(JERRY_BASE)/jerry-core \
			-I$(JERRY_BASE)/jerry-core/jrt

JERRY_LIBS += 		-l jerry-core -lm

JERRY_LIB_PATH += 	-L $(JERRY_BASE)/build/lib/

LINUX_LIBS +=		$(JERRY_LIBS)

ifeq ($(shell uname -s), Linux)
LINUX_LIBS +=		-pthread
endif

LINUX_DEFINES +=	-DZJS_LINUX_BUILD \
			-DBUILD_MODULE_BOARD \
			-DBUILD_MODULE_BUFFER \
			-DBUILD_MODULE_EVENTS \
			-DBUILD_MODULE_PERFORMANCE \
			-DBUILD_MODULE_CONSOLE \
			-DZJS_PRINT_FLOATS \
			-DBUILD_MODULE_TEST_PROMISE \
			-DBUILD_MODULE_PROMISE \
			-DBUILD_MODULE_TEST_CALLBACKS \
			-DBUILD_MODULE_A101 \
			-DBUILD_MODULE_GPIO \
			-DZJS_GPIO_MOCK \
			-DZJS_FIND_FUNC_NAME \
			-DJERRY_PORT_ENABLE_JOBQUEUE

LINUX_FLAGS += 	-fno-asynchronous-unwind-tables \
		-fno-omit-frame-pointer \
		-Wno-format-zero-length \
		-Wno-main \
		-ffreestanding \
		-Os \
		-fno-stack-protector \
		-ffunction-sections \
		-fdata-sections \
		-fno-strict-overflow \
		-Werror=implicit-int \
		-Wall \
		-std=gnu99 \
		-flto

ifeq ($(VARIANT), debug)
LINUX_DEFINES += -DDEBUG_BUILD -DOC_DEBUG
LINUX_FLAGS += -g
endif

ifeq ($(CB_STATS), on)
LINUX_DEFINES += -DZJS_PRINT_CALLBACK_STATS
endif

ifeq ($(V), 1)
VERBOSE=-v
endif

BUILD_OBJ = $(CORE_OBJ:%.o=$(BUILD_DIR)/%.o)

LINUX_MODULES="zjs_buffer.json,\
zjs_console.json,\
zjs_event.json,
ifneq ($(UNAME),Darwin)
LINUX_MODULES += zjs_iotivity_constrained.json,\
zjs_ocf.json,
endif
LINUX_MODULES += zjs_performance.json,\
zjs_promise.json,\
zjs_test_callbacks.json,\
zjs_test_promise.json,\
zjs_gpio.json"

ifneq ($(UNAME),Darwin)
# Only build OCF on linux, until iotivity-constrained is fixed on Mac

CORE_SRC +=	src/zjs_ocf_common.c \
		src/zjs_ocf_client.c \
		src/zjs_ocf_server.c

LINUX_INCLUDES += 	-I$(OCF_ROOT)/deps/tinydtls \
			-I$(OCF_ROOT)/deps/tinycbor/src \
			-include $(ZJS_BASE)/$(OCF_ROOT)/port/linux/config.h \
			-I$(OCF_ROOT) \
			-I$(OCF_ROOT)/port/linux \
			-I$(OCF_ROOT)/include \
			-I$(OCF_ROOT)/util \
			-I$(OCF_ROOT)/messaging/coap \
			-I$(OCF_ROOT)/api \
			-include $(ZJS_BASE)/src/zjs_ocf_config.h \
			-Ioutdir/include

include Makefile.ocf_linux

LINUX_DEFINES += -DOC_SERVER -DOC_CLIENT -DBUILD_MODULE_OCF -DZJS_GPIO_MOCK
endif

.PHONY: all
all: linux

.PHONY: setup
setup:
	./scripts/analyze BOARD=linux RESTRICT=$(LINUX_MODULES) V=$(V) JSON_DIR=src/

$(BUILD_DIR)/%.o:%.c
	@mkdir -p $(@D)
	@echo [CC] $@
	@gcc -c -o $@ $< -Wall -Werror $(LINUX_INCLUDES) $(LINUX_DEFINES) $(LINUX_FLAGS)

.PHONY: linux
linux: setup $(BUILD_OBJ)
	@cd deps/jerryscript; python ./tools/build.py \
		--error-messages ON $(VERBOSE) \
		--mem-heap 16 \
		--profile=es2015-subset \
		--jerry-port-default=OFF \
		--jerry-cmdline OFF \
		--jerry-libc OFF;

	@echo [LD] $(BUILD_DIR)/jslinux
	@gcc $(LINUX_INCLUDES) $(JERRY_LIB_PATH) -o $(BUILD_DIR)/jslinux $(BUILD_OBJ) $(LINUX_FLAGS) $(CFLAGS) $(LINUX_DEFINES) $(LINUX_LIBS)

.PHONY: clean
clean:
	rm -rf $(ZJS_BASE)/outdir/linux/
	rm -rf $(JERRY_BASE)/build/lib/
