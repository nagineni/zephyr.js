# Copyright (c) 2016-2017, Intel Corporation.

JERRY_BASE ?= $(ZJS_BASE)/deps/jerryscript
OCF_ROOT ?= deps/iotivity-constrained

ccflags-y += -Wall -Werror $(ZJS_FLAGS)

# TODO: iotivity-constrained gives some warnings and until we figure out how to
#       disable them just for iotivity-constrained, we need to turn them back
#       into warnings
ccflags-y += -Wno-error=format -Wno-error=strict-aliasing

# Select extended ANSI C/POSIX function set in recent Newlib versions
ccflags-y += -D_XOPEN_SOURCE=700

ccflags-y += -I$(JERRY_BASE)/jerry-core
ccflags-y += -I$(JERRY_BASE)/jerry-core/jrt
ccflags-y += -I$(ZEPHYR_BASE)/drivers
ccflags-y += -I$(ZJS_BASE)/outdir/include

ifeq ($(VARIANT), debug)
ccflags-y += -DDEBUG_BUILD
ccflags-y += -g
endif

ifeq ($(BOARD), qemu_x86)
ccflags-y += -DQEMU_BUILD
endif

ifeq ($(CB_STATS), on)
ccflags-y += -DZJS_PRINT_CALLBACK_STATS
endif

ifeq ($(PRINT_FLOAT), on)
export LDFLAGS += -u _printf_float
ccflags-y += -DZJS_PRINT_FLOATS
endif

ifneq ($(BLE_ADDR), none)
ccflags-y += -DZJS_CONFIG_BLE_ADDRESS=\"$(BLE_ADDR)\"
endif

obj-y += main.o \
         zjs_callbacks.o \
         zjs_common.o \
         zjs_error.o \
         zjs_modules.o \
         zjs_script.o \
         zjs_timers.o \
         zjs_util.o \
         jerry-port/zjs_jerry_port.o

ifneq (,$(findstring zjs_ashell,$(ASHELL)))
$(info Insecure Mode (development))
export JERRY_INCLUDE = $(JERRY_BASE)/jerry-core/
endif
